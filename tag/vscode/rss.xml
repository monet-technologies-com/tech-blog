<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>MONET Tech-Blog • Posts by &#34;vscode&#34; tag</title>
        <link>https://monet-technologies-com.github.io/tech-blog</link>
        <description>This is a tech-blog of MONET-Technologies</description>
        <language>ja</language>
        <pubDate>Wed, 15 Jul 2020 23:31:46 +0000</pubDate>
        <lastBuildDate>Wed, 15 Jul 2020 23:31:46 +0000</lastBuildDate>
        <category>Arch Linux</category>
        <category>Linux</category>
        <category>hexo</category>
        <category>vscode</category>
        <category>github</category>
        <category>docker</category>
        <category>OSS</category>
        <category>OSM</category>
        <category>OSRM</category>
        <category>最適化</category>
        <category>VRP</category>
        <item>
            <guid isPermalink="true">https://monet-technologies-com.github.io/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(VSCode%E3%81%AE%E8%A8%AD%E5%AE%9A%E7%B7%A8)/</guid>
            <title>技術ブログ始めました(VSCodeの設定編)</title>
            <link>https://monet-technologies-com.github.io/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(VSCode%E3%81%AE%E8%A8%AD%E5%AE%9A%E7%B7%A8)/</link>
            <category>hexo</category>
            <category>vscode</category>
            <pubDate>Wed, 15 Jul 2020 23:31:46 +0000</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;はじめに&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#はじめに&#34;&gt;#&lt;/a&gt; はじめに&lt;/h1&gt;
&lt;p&gt;MONET Technologies 株式会社、2020 年新卒入社の竹内です。&lt;/p&gt;
&lt;p&gt;この記事では、技術ブログ開始に当たって、VSCode での Hexo 記事執筆環境を導入した話です。&lt;/p&gt;
&lt;p&gt;全体構成のお話は&lt;a href=&#34;/tech-blog/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/&#34; title=&#34;技術ブログ始めました(構成編)&#34;&gt;技術ブログ始めました(構成編)&lt;/a&gt;でお話しています。&lt;/p&gt;
&lt;p&gt;静的サイトジェネレータである Hexo を導入したお話は&lt;a href=&#34;/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(Hexo-on-Docker%E7%B7%A8)/&#34; title=&#34;技術ブログ始めました(Hexo-on-Docker編)&#34;&gt;技術ブログ始めました(Hexo-on-Docker編)&lt;/a&gt;でお話しています。&lt;/p&gt;
&lt;h2 id=&#34;楽な執筆環境に向けて&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#楽な執筆環境に向けて&#34;&gt;#&lt;/a&gt; 楽な執筆環境に向けて&lt;/h2&gt;
&lt;p&gt;技術ブログ、エンジニアの方なら一度は書こうとするものだと思うのですが、3 ヶ月続けられた方には心からの拍手を送りたいです。&lt;/p&gt;
&lt;p&gt;やはり、モノを書く、アウトプットするのってコストが高いんですよね。単なるメモ程度なら雑に書いても良いわけですが、ブログとして書こうとするとある程度体裁を整えないといけなかったり。。。といったことを考えると、筆が重くなり。。。&lt;/p&gt;
&lt;p&gt;そこで今回は、執筆を楽にするためのツール、VSCode 上のエクステンションを紹介してみます。&lt;/p&gt;
&lt;h2 id=&#34;vscode-hexo-utils&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vscode-hexo-utils&#34;&gt;#&lt;/a&gt; vscode-hexo-utils&lt;/h2&gt;
&lt;p&gt;Hexo+VSCode で執筆する際には必須のエクステンションです。&lt;br&gt;
この&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=fantasy.vscode-hexo-utils&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; vscode-hexo-utils&lt;/a&gt; を使うと&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;記事一覧やタグ一覧を表示するサイドバーの追加&lt;/li&gt;
&lt;li&gt;マークダウンに画像を挿入したプレビュー時、Hexo ならではの画像ディレクトリ構成に対応してプレビューを見せてくれる&lt;/li&gt;
&lt;li&gt;Win:ctrl-alt-v Mac:opt-cmd-v でクリップボードの画像を貼り付け (記事に対応した画像配置用ディレクトリの作成とマークダウン上の参照文記述)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などなどしてくれるので大分執筆が楽になります。特に画像の挿入は重要なので、開発者には頭が上がりません。&lt;/p&gt;
&lt;h2 id=&#34;remote-development&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#remote-development&#34;&gt;#&lt;/a&gt; Remote Development&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/remote/remote-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;は Docker など、リモートとして作った環境に対して VSCode を接続できるエクステンションです。今回は Docker 上に Hexo や Git を構成しているので、直接接続して、Docker 上のコマンドを呼び出す、なんてことが簡単になります。&lt;/p&gt;
&lt;p&gt;ただ、残念なことが、 &lt;strong&gt;リモートで接続した際にクリップボードが共有化されていないらしく、上記の vscode-hexo-utils の画像コピペ機能が上手く働きません。&lt;/strong&gt;&lt;br&gt;
そのため、こちらは残念ながら、執筆中には使えない感じになっています。。。&lt;br&gt;
もしクリップボードの共有化ができると、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;vscode を直接 Docker に繋げる&lt;/li&gt;
&lt;li&gt;vscode-hexo-utils を使いながら執筆&lt;/li&gt;
&lt;li&gt;直接 Docker 内のコマンドを叩いてデプロイ&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;といった使い方ができるようになります。&lt;/p&gt;
&lt;p&gt;もちろん今の Remote Development 機能も大変良いモノで、友人なんかは、RaspberryPi などでリモート環境を作る、VSCode でリモート接続して手元の PC で IoT 開発、なんてこともしているのでおすすめです。&lt;/p&gt;
&lt;h2 id=&#34;vscodeのタスク機能&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vscodeのタスク機能&#34;&gt;#&lt;/a&gt; VSCode のタスク機能&lt;/h2&gt;
&lt;p&gt;今回は Docker を通じてのデプロイになりますが、VSCode の方でコマンドを打ってデプロイまで行いたいですよね。&lt;br&gt;
そこで使うのが、VSCode のタスク機能です。&lt;/p&gt;
&lt;p&gt;参考になるのが&lt;a href=&#34;https://fereria.github.io/reincarnation_tech/98_Other/VSCode/vscode_create_task/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;です。&lt;/p&gt;
&lt;p&gt;自分は&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-language-json&#34; mdui-tooltip=&#34;{content: &#39;language-json&#39;}&#34;&gt;&lt;code class=&#34;language-language-json&#34;&gt;{
  &#34;version&#34;: &#34;2.0.0&#34;,
  &#34;tasks&#34;: [
    {
      &#34;label&#34;: &#34;deploy-hexo-on-docker&#34;,
      &#34;type&#34;: &#34;shell&#34;,
      &#34;command&#34;: &#34;docker exec -it hexo-domain.com git add . &amp;&amp; docker exec -it hexo-domain.com git commit -m &#39;update ${fileBasenameNoExtension}&#39; &amp;&amp; docker exec -it hexo-domain.com git push&#34;
    }
  ]
}
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;というコマンドを登録して、VSCode から Docker 上の Git を叩き、push するとともにデプロイを行っています。&lt;br&gt;
このタスク機能を使えば、任意のコマンドを VSCode 上で使えるので良いですね。&lt;/p&gt;
&lt;h2 id=&#34;vscode-drawio&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vscode-drawio&#34;&gt;#&lt;/a&gt; vscode-drawio&lt;/h2&gt;
&lt;p&gt;最後に紹介するエクステンションは、&lt;br&gt;
&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;vscode-drawio&lt;/a&gt; です。&lt;/p&gt;
&lt;p&gt;こちらはブラウザ上で動く draw.io を vscode 上で動かそうというモノで、簡単な図を書きたい時に使えます。&lt;/p&gt;
&lt;p&gt;この、なんでもエディタ上にのせてやろうという心意気、自分は嫌いじゃないです。笑&lt;/p&gt;
&lt;h1 id=&#34;まとめ&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#まとめ&#34;&gt;#&lt;/a&gt; まとめ&lt;/h1&gt;
&lt;p&gt;様々な VSCode のエクステンションがあって、見ていて楽しいです。&lt;br&gt;
もちろんエンジニアは何を生み出すか、も重要ですが、たまには息抜きに自分の道具を磨いて見るのも良いですね。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://monet-technologies-com.github.io/tech-blog/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/</guid>
            <title>技術ブログ始めました(構成編)</title>
            <link>https://monet-technologies-com.github.io/tech-blog/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/</link>
            <category>hexo</category>
            <category>vscode</category>
            <category>github</category>
            <category>docker</category>
            <pubDate>Tue, 14 Jul 2020 05:09:45 +0000</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;はじめに&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#はじめに&#34;&gt;#&lt;/a&gt; はじめに&lt;/h1&gt;
&lt;p&gt;MONET Technologies 株式会社、2020 年新卒入社の竹内です。&lt;/p&gt;
&lt;p&gt;この度、弊社でも社員の技術力向上 &amp;amp; アウトプットのために、技術ブログを開設する運びとなりました。&lt;/p&gt;
&lt;p&gt;記念すべき 1 回目の記事は、この技術ブログの立ち上げについて一通り書きます。&lt;/p&gt;
&lt;h2 id=&#34;技術ブログの選定&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#技術ブログの選定&#34;&gt;#&lt;/a&gt; 技術ブログの選定&lt;/h2&gt;
&lt;p&gt;技術ブログを作成するに当たって考えたのは、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;サーバの維持コスト&lt;/li&gt;
&lt;li&gt;記事の管理コスト&lt;/li&gt;
&lt;li&gt;執筆環境&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;の 3 点です。技術ブログを公開するというということは当然 Web サーバが必要になるわけですが、そこにコストやメンテナンスが必要になると継続するのが面倒です。なので、何か外部のサービスを使って公開したいという要求があります。&lt;br&gt;
また、ページを編集したら、編集履歴や差分まで管理したいです。&lt;br&gt;
更に、執筆環境としては、普段コードを書いたりするエディタを使ってそのまま書きたいですよね。&lt;/p&gt;
&lt;p&gt;ということで、今回は静的サイトジェネレータ&lt;a href=&#34;https://hexo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; Hexo&lt;/a&gt; と&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; Github Pages&lt;/a&gt; を使って技術ブログを作ってみることにしました。ただ、今回用いる Hexo は Node.js で作られており、バージョン管理などが面倒です。そこで、今回は、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成環境：Docker 上の Hexo&lt;/li&gt;
&lt;li&gt;執筆環境：Visual Studio Code などの各自のエディタ&lt;/li&gt;
&lt;li&gt;公開環境：Github Pages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という構成で全体を組みました (もちろん執筆環境はお好きなエディタを使ってください)。&lt;/p&gt;
&lt;p&gt;全体構成のイメージはこんな感じです。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2020-08-06T103219.png&#34; alt=&#34;2020-08-06T103219&#34;&gt;&lt;/p&gt;
&lt;p&gt;次回からそれぞれの環境について執筆していきます。&lt;/p&gt;
&lt;h1 id=&#34;まとめ&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#まとめ&#34;&gt;#&lt;/a&gt; まとめ&lt;/h1&gt;
&lt;p&gt;技術ブログを始めるので皆様ゆるゆるとお付き合いください！&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
