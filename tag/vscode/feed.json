{
    "version": "https://jsonfeed.org/version/1",
    "title": "MONET Tech-Blog • All posts by \"vscode\" tag",
    "description": "This is a tech-blog of MONET-Technologies",
    "home_page_url": "https://monet-technologies-com.github.io/tech-blog",
    "items": [
        {
            "id": "https://monet-technologies-com.github.io/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(VSCode%E3%81%AE%E8%A8%AD%E5%AE%9A%E7%B7%A8)/",
            "url": "https://monet-technologies-com.github.io/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(VSCode%E3%81%AE%E8%A8%AD%E5%AE%9A%E7%B7%A8)/",
            "title": "技術ブログ始めました(VSCodeの設定編)",
            "date_published": "2020-07-15T23:31:46.000Z",
            "content_html": "<h1 id=\"はじめに\"><a class=\"markdownIt-Anchor\" href=\"#はじめに\">#</a> はじめに</h1>\n<p>MONET Technologies 株式会社、2020 年新卒入社の竹内です。</p>\n<p>この記事では、技術ブログ開始に当たって、VSCode での Hexo 記事執筆環境を導入した話です。</p>\n<p>全体構成のお話は<a href=\"/tech-blog/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/\" title=\"技術ブログ始めました(構成編)\">技術ブログ始めました(構成編)</a>でお話しています。</p>\n<p>静的サイトジェネレータである Hexo を導入したお話は<a href=\"/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(Hexo-on-Docker%E7%B7%A8)/\" title=\"技術ブログ始めました(Hexo-on-Docker編)\">技術ブログ始めました(Hexo-on-Docker編)</a>でお話しています。</p>\n<h2 id=\"楽な執筆環境に向けて\"><a class=\"markdownIt-Anchor\" href=\"#楽な執筆環境に向けて\">#</a> 楽な執筆環境に向けて</h2>\n<p>技術ブログ、エンジニアの方なら一度は書こうとするものだと思うのですが、3 ヶ月続けられた方には心からの拍手を送りたいです。</p>\n<p>やはり、モノを書く、アウトプットするのってコストが高いんですよね。単なるメモ程度なら雑に書いても良いわけですが、ブログとして書こうとするとある程度体裁を整えないといけなかったり。。。といったことを考えると、筆が重くなり。。。</p>\n<p>そこで今回は、執筆を楽にするためのツール、VSCode 上のエクステンションを紹介してみます。</p>\n<h2 id=\"vscode-hexo-utils\"><a class=\"markdownIt-Anchor\" href=\"#vscode-hexo-utils\">#</a> vscode-hexo-utils</h2>\n<p>Hexo+VSCode で執筆する際には必須のエクステンションです。<br>\nこの<a href=\"https://marketplace.visualstudio.com/items?itemName=fantasy.vscode-hexo-utils\" target=\"_blank\" rel=\"noopener\"> vscode-hexo-utils</a> を使うと</p>\n<ul>\n<li>記事一覧やタグ一覧を表示するサイドバーの追加</li>\n<li>マークダウンに画像を挿入したプレビュー時、Hexo ならではの画像ディレクトリ構成に対応してプレビューを見せてくれる</li>\n<li>Win:ctrl-alt-v Mac:opt-cmd-v でクリップボードの画像を貼り付け (記事に対応した画像配置用ディレクトリの作成とマークダウン上の参照文記述)</li>\n</ul>\n<p>などなどしてくれるので大分執筆が楽になります。特に画像の挿入は重要なので、開発者には頭が上がりません。</p>\n<h2 id=\"remote-development\"><a class=\"markdownIt-Anchor\" href=\"#remote-development\">#</a> Remote Development</h2>\n<p><a href=\"https://code.visualstudio.com/docs/remote/remote-overview\" target=\"_blank\" rel=\"noopener\">こちら</a>は Docker など、リモートとして作った環境に対して VSCode を接続できるエクステンションです。今回は Docker 上に Hexo や Git を構成しているので、直接接続して、Docker 上のコマンドを呼び出す、なんてことが簡単になります。</p>\n<p>ただ、残念なことが、 <strong>リモートで接続した際にクリップボードが共有化されていないらしく、上記の vscode-hexo-utils の画像コピペ機能が上手く働きません。</strong><br>\nそのため、こちらは残念ながら、執筆中には使えない感じになっています。。。<br>\nもしクリップボードの共有化ができると、</p>\n<ol>\n<li>vscode を直接 Docker に繋げる</li>\n<li>vscode-hexo-utils を使いながら執筆</li>\n<li>直接 Docker 内のコマンドを叩いてデプロイ</li>\n</ol>\n<p>といった使い方ができるようになります。</p>\n<p>もちろん今の Remote Development 機能も大変良いモノで、友人なんかは、RaspberryPi などでリモート環境を作る、VSCode でリモート接続して手元の PC で IoT 開発、なんてこともしているのでおすすめです。</p>\n<h2 id=\"vscodeのタスク機能\"><a class=\"markdownIt-Anchor\" href=\"#vscodeのタスク機能\">#</a> VSCode のタスク機能</h2>\n<p>今回は Docker を通じてのデプロイになりますが、VSCode の方でコマンドを打ってデプロイまで行いたいですよね。<br>\nそこで使うのが、VSCode のタスク機能です。</p>\n<p>参考になるのが<a href=\"https://fereria.github.io/reincarnation_tech/98_Other/VSCode/vscode_create_task/\" target=\"_blank\" rel=\"noopener\">こちら</a>です。</p>\n<p>自分は</p>\n<pre class=\"line-numbers language-language-json\" mdui-tooltip=\"{content: 'language-json'}\"><code class=\"language-language-json\">{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"label\": \"deploy-hexo-on-docker\",\n      \"type\": \"shell\",\n      \"command\": \"docker exec -it hexo-domain.com git add . && docker exec -it hexo-domain.com git commit -m 'update ${fileBasenameNoExtension}' && docker exec -it hexo-domain.com git push\"\n    }\n  ]\n}\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>というコマンドを登録して、VSCode から Docker 上の Git を叩き、push するとともにデプロイを行っています。<br>\nこのタスク機能を使えば、任意のコマンドを VSCode 上で使えるので良いですね。</p>\n<h2 id=\"vscode-drawio\"><a class=\"markdownIt-Anchor\" href=\"#vscode-drawio\">#</a> vscode-drawio</h2>\n<p>最後に紹介するエクステンションは、<br>\n<a href=\"https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio\" target=\"_blank\" rel=\"noopener\">vscode-drawio</a> です。</p>\n<p>こちらはブラウザ上で動く draw.io を vscode 上で動かそうというモノで、簡単な図を書きたい時に使えます。</p>\n<p>この、なんでもエディタ上にのせてやろうという心意気、自分は嫌いじゃないです。笑</p>\n<h1 id=\"まとめ\"><a class=\"markdownIt-Anchor\" href=\"#まとめ\">#</a> まとめ</h1>\n<p>様々な VSCode のエクステンションがあって、見ていて楽しいです。<br>\nもちろんエンジニアは何を生み出すか、も重要ですが、たまには息抜きに自分の道具を磨いて見るのも良いですね。</p>\n",
            "tags": [
                "hexo",
                "vscode"
            ]
        },
        {
            "id": "https://monet-technologies-com.github.io/tech-blog/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/",
            "url": "https://monet-technologies-com.github.io/tech-blog/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/",
            "title": "技術ブログ始めました(構成編)",
            "date_published": "2020-07-14T05:09:45.000Z",
            "content_html": "<h1 id=\"はじめに\"><a class=\"markdownIt-Anchor\" href=\"#はじめに\">#</a> はじめに</h1>\n<p>MONET Technologies 株式会社、2020 年新卒入社の竹内です。</p>\n<p>この度、弊社でも社員の技術力向上 &amp; アウトプットのために、技術ブログを開設する運びとなりました。</p>\n<p>記念すべき 1 回目の記事は、この技術ブログの立ち上げについて一通り書きます。</p>\n<h2 id=\"技術ブログの選定\"><a class=\"markdownIt-Anchor\" href=\"#技術ブログの選定\">#</a> 技術ブログの選定</h2>\n<p>技術ブログを作成するに当たって考えたのは、</p>\n<ol>\n<li>サーバの維持コスト</li>\n<li>記事の管理コスト</li>\n<li>執筆環境</li>\n</ol>\n<p>の 3 点です。技術ブログを公開するというということは当然 Web サーバが必要になるわけですが、そこにコストやメンテナンスが必要になると継続するのが面倒です。なので、何か外部のサービスを使って公開したいという要求があります。<br>\nまた、ページを編集したら、編集履歴や差分まで管理したいです。<br>\n更に、執筆環境としては、普段コードを書いたりするエディタを使ってそのまま書きたいですよね。</p>\n<p>ということで、今回は静的サイトジェネレータ<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\"> Hexo</a> と<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\"> Github Pages</a> を使って技術ブログを作ってみることにしました。ただ、今回用いる Hexo は Node.js で作られており、バージョン管理などが面倒です。そこで、今回は、</p>\n<ul>\n<li>生成環境：Docker 上の Hexo</li>\n<li>執筆環境：Visual Studio Code などの各自のエディタ</li>\n<li>公開環境：Github Pages</li>\n</ul>\n<p>という構成で全体を組みました (もちろん執筆環境はお好きなエディタを使ってください)。</p>\n<p>全体構成のイメージはこんな感じです。</p>\n<p><img src=\"2020-08-06T103219.png\" alt=\"2020-08-06T103219\"></p>\n<p>次回からそれぞれの環境について執筆していきます。</p>\n<h1 id=\"まとめ\"><a class=\"markdownIt-Anchor\" href=\"#まとめ\">#</a> まとめ</h1>\n<p>技術ブログを始めるので皆様ゆるゆるとお付き合いください！</p>\n",
            "tags": [
                "hexo",
                "vscode",
                "github",
                "docker"
            ]
        }
    ]
}