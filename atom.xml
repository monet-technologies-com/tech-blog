<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://monet-technologies-com.github.io/tech-blog</id>
    <title>MONET Tech-Blog</title>
    <link href="https://monet-technologies-com.github.io/tech-blog" />
    <updated>2020-09-22T15:43:00.000Z</updated>
    <category term="Arch Linux" />
    <category term="Linux" />
    <category term="hexo" />
    <category term="vscode" />
    <category term="github" />
    <category term="docker" />
    <category term="OSS" />
    <category term="OSM" />
    <category term="OSRM" />
    <category term="最適化" />
    <category term="VRP" />
    <entry>
        <id>https://monet-technologies-com.github.io/tech-blog/2020/09/22/%E3%82%AA%E3%83%B3%E3%83%87%E3%83%9E%E3%83%B3%E3%83%89%E3%83%90%E3%82%B9%E6%9C%80%E9%81%A9%E5%8C%96%E3%81%AE%E3%82%A8%E3%83%83%E3%82%BB%E3%83%B3%E3%82%B91/</id>
        <title>オンデマンドバス最適化のエッセンス1</title>
        <link rel="alternate" href="https://monet-technologies-com.github.io/tech-blog/2020/09/22/%E3%82%AA%E3%83%B3%E3%83%87%E3%83%9E%E3%83%B3%E3%83%89%E3%83%90%E3%82%B9%E6%9C%80%E9%81%A9%E5%8C%96%E3%81%AE%E3%82%A8%E3%83%83%E3%82%BB%E3%83%B3%E3%82%B91/"/>
        <content type="html">&lt;h1 id=&#34;はじめに&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#はじめに&#34;&gt;#&lt;/a&gt; はじめに&lt;/h1&gt;
&lt;p&gt;システム部の竹内です。&lt;/p&gt;
&lt;p&gt;今回の記事では、少し真面目に理論的なことを考えていきたいと思います。&lt;/p&gt;
&lt;p&gt;MONET ではオンデマンドバスを提供するパッケージを提供していますが、&lt;br&gt;
配送の最適化は昔から学術的にも考えられている問題です。&lt;/p&gt;
&lt;p&gt;今回は理論的に最適化問題を解く流れを見ながら、&lt;br&gt;
配送最適化のエッセンスを感じていただければと思います。&lt;/p&gt;
&lt;h2 id=&#34;一般的にオンデマンドバスを捉える&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一般的にオンデマンドバスを捉える&#34;&gt;#&lt;/a&gt; 一般的にオンデマンドバスを捉える&lt;/h2&gt;
&lt;p&gt;まず、そもそも「オンデマンドバスの最適化」とはどんな問題なのでしょうか。&lt;br&gt;
最適化問題を理論的に考えるときには、まず、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;何が事前情報として与えられるのか&lt;/li&gt;
&lt;li&gt;何を決定するのか&lt;/li&gt;
&lt;li&gt;どんな観点で決定を評価するのか&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;と言った観点を明らかにする必要があります。&lt;/p&gt;
&lt;p&gt;今回考えたいオンデマンドバスのシチュエーションでは、例えば、&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;何が事前情報として与えられるのか：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;バスが何台か存在する
&lt;ul&gt;
&lt;li&gt;一度に運べる乗客の積載容量は決まっている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;乗客が乗降するための駅が何箇所か存在する
&lt;ul&gt;
&lt;li&gt;駅間には距離が定義される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;利用希望の乗客が何人か存在する
&lt;ul&gt;
&lt;li&gt;出発駅と到着駅のペア&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;何を決定するのか：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;乗客が、いつ、どの車に乗るか (配車割当)&lt;/li&gt;
&lt;li&gt;車が、どのような経路で駅間を移動するか (配送経路)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;どんな観点で決定を評価するのか：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全ての車の配送経路の総和&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;として整理することができます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2020-09-23T101757.png&#34; alt=&#34;2020-09-23T101757&#34;&gt;&lt;/p&gt;
&lt;p&gt;もちろん、問題の捉え方によっては、他の整理の仕方があります。&lt;br&gt;
例えば、乗客が決まった出発駅を持たず、現在地から近ければ近いほど好ましい状況、というシチュエーションも考えられます。&lt;/p&gt;
&lt;p&gt;ただ、いずれにせよ、最適化を理論的に考える場合には、最低限上記の 3 点を明確に正しく把握しておくことは重要です。&lt;/p&gt;
&lt;h2 id=&#34;よくある運搬経路最適化問題vrp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#よくある運搬経路最適化問題vrp&#34;&gt;#&lt;/a&gt; よくある運搬経路最適化問題 (VRP)&lt;/h2&gt;
&lt;p&gt;上記問題の詳細を考える問題として、&lt;br&gt;
運搬経路最適化問題 (Vehicle Routing Problem) があります。&lt;br&gt;
この問題は、巡回セールスマン問題を複数人で分担して行うことを考える問題になっています。&lt;/p&gt;
&lt;p&gt;理解しやすい解説として、以下の Qiita 記事がよくまとまっています。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://qiita.com/r_nsd/items/19dcb30f5478384f90d3&#34;&gt;運搬経路問題（配送最適化問題，Vehicle Routing Problem) を PuLP で解く&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VRP の特徴として、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全てのバスは車庫から出発して車庫に戻ってくる&lt;/li&gt;
&lt;li&gt;計画を立てるタイミングで全ての予約が出揃っている&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などの問題設定がなされています。&lt;/p&gt;
&lt;p&gt;こちらも重要なポイントですが、&lt;br&gt;
実社会にみられる問題は、既に考えられている問題に帰着できる場合があります。&lt;br&gt;
このとき、帰着先の問題において、問題設定にどのような前提があるのかをよく理解しながら帰着させることが重要です。&lt;/p&gt;
&lt;p&gt;今回の問題を VRP として捉えると、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;バスはキャパシティを持つ&lt;/li&gt;
&lt;li&gt;乗客は出発地と目的地を持つ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という観点から、VRP の派生問題である CVRPPD (Capacitated VRP with Pick-up and Delivery) という問題として捉えることができます。&lt;/p&gt;
&lt;h2 id=&#34;vrpのソルバー&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vrpのソルバー&#34;&gt;#&lt;/a&gt; VRP のソルバー&lt;/h2&gt;
&lt;p&gt;考えている問題が何か有名な問題に帰着できる場合 (今回は VRP)、多くの場合既にソルバー (問題を解くためのプログラム / アルゴリズム) が存在します。&lt;/p&gt;
&lt;p&gt;今回考えている VRP には、&lt;br&gt;
&lt;a href=&#34;https://developers.google.com/optimization/routing/vrp&#34;&gt;OR-tools&lt;/a&gt;&lt;br&gt;
 という OSS ソルバーが存在しています。&lt;/p&gt;
&lt;p&gt;こちらのようなソルバーを使うと、CVRPPD をプログラムに落とし込むことができます。&lt;br&gt;
つまり、駅や車のキャパシティ、乗客の出発地、目的地などのパラメータを与えることによって、&lt;br&gt;
プログラムを用いて最適な配送計画を計算することができます。&lt;/p&gt;
&lt;p&gt;ただし、利用するソルバーによっては、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与えられるパラメータに制限がつく
&lt;ul&gt;
&lt;li&gt;各駅について、高々一人が出発地または目的地に設定する (出発地、目的地の重複がない) 状況しか考えられない&lt;/li&gt;
&lt;li&gt;駅数などパラメータの数に制限がつく&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;処理時間はソルバー依存&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;と言った問題点が出てくる場合もあります。&lt;/p&gt;
&lt;p&gt;ここでのポイントとしては、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;考えている問題の規模によって、ソルバーを選ぶ必要がある
&lt;ul&gt;
&lt;li&gt;パラメータの数、処理時間の要求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;帰着させた問題によっては、ソルバーにあう形で新たな制限 (仮定) を置かなければならない場合がある&lt;/li&gt;
&lt;li&gt;何らかの高速なソルバーが存在する場合には、帰着させる問題を工夫して、ソルバーで解きやすい形の問題に帰着させることも考慮する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;といったものが挙げられます。&lt;/p&gt;
&lt;h2 id=&#34;実際のプログラム&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#実際のプログラム&#34;&gt;#&lt;/a&gt; 実際のプログラム&lt;/h2&gt;
&lt;p&gt;せっかくなので、OR-tools を使って CVRPPD を解くプログラムをみてみます。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;src.py&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; __future__ &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; print_function
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ortools&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;constraint_solver &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; routing_enums_pb2
&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; ortools&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;constraint_solver &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; pywrapcp


&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;create_data_model&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 17箇所の駅&lt;/span&gt;
    data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;distance_matrix&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;548&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;776&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;696&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;582&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;274&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;308&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;354&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;468&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;776&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;662&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;548&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;684&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;308&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;730&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;354&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;696&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;742&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1084&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;594&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;480&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;674&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1016&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;868&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1210&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;776&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;684&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;992&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;878&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;274&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;810&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;468&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;742&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1278&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1164&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1130&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;788&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1552&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;754&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;696&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;308&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;992&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;114&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;650&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;878&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;844&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;890&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1232&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;628&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;822&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1164&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;560&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1358&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;582&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;878&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;114&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;764&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;730&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;776&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1118&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;708&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1050&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;674&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1244&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;274&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;650&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;228&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;308&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;240&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;582&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;776&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;662&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;628&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1050&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;708&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;730&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;274&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;878&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;764&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;228&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;468&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;354&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1004&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;890&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;856&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1278&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;480&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;354&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;810&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;308&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;342&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;730&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;468&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;354&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;320&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;662&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;742&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;856&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;308&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;696&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;468&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;844&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;730&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;342&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;274&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;810&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;696&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;662&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;320&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1084&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;742&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;742&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;890&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;776&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;240&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;468&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;274&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;342&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;422&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;274&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;810&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;468&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1084&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1232&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1118&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;582&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;354&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;730&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;342&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;878&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;764&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;730&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1152&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;354&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;594&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1278&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;776&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1004&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;468&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;810&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;878&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;114&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;308&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;650&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;274&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;844&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;480&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1164&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;628&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;662&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;890&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;354&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;696&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;422&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;764&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;114&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;730&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;354&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;674&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1130&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;822&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;708&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;628&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;856&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;320&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;662&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;730&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;308&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;342&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;422&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;468&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1016&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;788&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1164&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1050&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;662&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;320&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;274&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;650&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;342&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;764&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;776&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;868&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1552&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;560&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;674&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1050&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1278&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;742&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1084&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;810&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1152&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;274&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;388&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;422&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;764&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;798&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;662&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1210&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;754&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1358&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1244&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;708&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;480&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;856&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;514&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;468&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;354&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;844&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;730&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;536&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;194&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;798&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 8人分の予約(ODペア)が発生&lt;/span&gt;
    data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;pickups_deliveries&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 車が4台&lt;/span&gt;
    data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;num_vehicles&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 各駅について、出発駅として設定されている場合は需要1、&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 到着駅として設定されている場合には需要-1(降りることを表現)&lt;/span&gt;
    data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;demands&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 各車の最大積載容量&lt;/span&gt;
    data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;vehicle_capacities&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# 車庫&lt;/span&gt;
    data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;depot&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data


&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;print_solution&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; manager&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; routing&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; solution&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;Prints solution on console.&#34;&#34;&#34;&lt;/span&gt;
    total_distance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; vehicle_id &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;num_vehicles&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        index &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Start&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vehicle_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        plan_output &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Route for vehicle &amp;#123;&amp;#125;:\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vehicle_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        route_distance &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;IsEnd&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
            plan_output &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39; &amp;#123;&amp;#125; -&gt; &#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;manager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;IndexToNode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            previous_index &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; index
            index &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; solution&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Value&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;NextVar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            route_distance &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;GetArcCostForVehicle&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
                previous_index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; vehicle_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        plan_output &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&amp;#123;&amp;#125;\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;manager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;IndexToNode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        plan_output &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Distance of the route: &amp;#123;&amp;#125;m\n&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;route_distance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;plan_output&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        total_distance &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; route_distance
    &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Total Distance of all routes: &amp;#123;&amp;#125;m&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;total_distance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;Entry point of the program.&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;# Instantiate the data problem.&lt;/span&gt;
    data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; create_data_model&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token comment&#34;&gt;# Create the routing index manager.&lt;/span&gt;
    manager &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pywrapcp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;RoutingIndexManager&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;distance_matrix&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                                            data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;num_vehicles&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;depot&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token comment&#34;&gt;# Create Routing Model.&lt;/span&gt;
    routing &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pywrapcp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;RoutingModel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;manager&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token comment&#34;&gt;# Define cost of each arc.&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;distance_callback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;from_index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; to_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;Returns the manhattan distance between the two nodes.&#34;&#34;&#34;&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# Convert from routing variable Index to distance matrix NodeIndex.&lt;/span&gt;
        from_node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; manager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;IndexToNode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;from_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        to_node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; manager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;IndexToNode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;to_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;distance_matrix&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;from_node&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;to_node&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;

    transit_callback_index &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;RegisterTransitCallback&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;distance_callback&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SetArcCostEvaluatorOfAllVehicles&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;transit_callback_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token comment&#34;&gt;# Add Distance constraint.&lt;/span&gt;
    dimension_name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Distance&#39;&lt;/span&gt;
    routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AddDimension&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
        transit_callback_index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# no slack&lt;/span&gt;
        &lt;span class=&#34;token number&#34;&gt;2500&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# vehicle maximum travel distance&lt;/span&gt;
        &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# start cumul to zero&lt;/span&gt;
        dimension_name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    distance_dimension &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;GetDimensionOrDie&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dimension_name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    distance_dimension&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SetGlobalSpanCostCoefficient&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;demand_callback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;from_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34;Returns the demand of the node.&#34;&#34;&#34;&lt;/span&gt;
        &lt;span class=&#34;token comment&#34;&gt;# Convert from routing variable Index to demands NodeIndex.&lt;/span&gt;
        from_node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; manager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;IndexToNode&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;from_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;demands&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;from_node&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;

    demand_callback_index &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;RegisterUnaryTransitCallback&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;demand_callback&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AddDimensionWithVehicleCapacity&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
        demand_callback_index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# null capacity slack&lt;/span&gt;
        data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;vehicle_capacities&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# vehicle maximum capacities&lt;/span&gt;
        &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# start cumul to zero&lt;/span&gt;
        &lt;span class=&#34;token string&#34;&gt;&#39;Capacity&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;



    &lt;span class=&#34;token comment&#34;&gt;# Define Transportation Requests.&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; request &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;pickups_deliveries&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        pickup_index &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; manager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;NodeToIndex&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        delivery_index &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; manager&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;NodeToIndex&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AddPickupAndDelivery&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pickup_index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; delivery_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;solver&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
            routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;VehicleVar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pickup_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;VehicleVar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
                delivery_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;solver&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
            distance_dimension&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CumulVar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pickup_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;
            distance_dimension&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CumulVar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;delivery_index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token comment&#34;&gt;# Setting first solution heuristic.&lt;/span&gt;
    search_parameters &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pywrapcp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DefaultRoutingSearchParameters&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    search_parameters&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;first_solution_strategy &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;
        routing_enums_pb2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;FirstSolutionStrategy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;PARALLEL_CHEAPEST_INSERTION&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token comment&#34;&gt;# Solve the problem.&lt;/span&gt;
    solution &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; routing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;SolveWithParameters&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;search_parameters&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;token comment&#34;&gt;# Print solution on console.&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; solution&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
        print_solution&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; manager&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; routing&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; solution&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    main&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;結構長々と書いてあって小難しく見えますが、&lt;br&gt;
実際このプログラムの重要なところは &lt;code&gt;create_data_model()&lt;/code&gt;  の中で、&lt;br&gt;
問題のパラメータ (駅の数など) はこちらで指定できます。&lt;br&gt;
ここまでできれば、あとはソルバーがよしなに解いてくれます。&lt;/p&gt;
&lt;p&gt;実行結果としては、&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;Route for vehicle 0:
 0 -&amp;gt;  13 -&amp;gt;  15 -&amp;gt;  11 -&amp;gt;  12 -&amp;gt; 0
Distance of the route: 1552m

Route for vehicle 1:
 0 -&amp;gt;  5 -&amp;gt;  2 -&amp;gt;  10 -&amp;gt;  16 -&amp;gt;  14 -&amp;gt;  9 -&amp;gt; 0
Distance of the route: 2192m

Route for vehicle 2:
 0 -&amp;gt;  7 -&amp;gt;  1 -&amp;gt;  6 -&amp;gt;  8 -&amp;gt; 0
Distance of the route: 1780m

Route for vehicle 3:
 0 -&amp;gt;  4 -&amp;gt;  3 -&amp;gt; 0
Distance of the route: 1392m

Total Distance of all routes: 6916m&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;として出力されます。&lt;/p&gt;
&lt;p&gt;このような一連の流れで、最適化問題は実際に解くことができます。&lt;/p&gt;
&lt;p&gt;一点注意したいのが、ソルバーによっては、導き出される解がグローバルに最適解でない&lt;br&gt;
 (ちょっと解を弄るだけでは状況を改善できないが、実は全く別の解を持ってくると改善される) 可能性も存在します。&lt;br&gt;
グローバルな最適解かどうかは、ソルバーのアルゴリズムに依存するので、&lt;br&gt;
どうしてもグローバルな最適解が必要な場合は注意が必要です。&lt;br&gt;
ただし、&lt;strong&gt;グローバルな最適解が本当に必要か&lt;/strong&gt;、という観点もまた重要です。&lt;br&gt;
例えば、処理時間を 1 日かけて 0.01% 改善する解を得ることは、&lt;br&gt;
学術的には意味があるかもしれませんが、実際の社会に組み込む視点で見るとどうでしょう。&lt;br&gt;
それよりも、数秒で 90% の結果を得る方が、価値がある場合もありそうです。&lt;/p&gt;
&lt;h1 id=&#34;まとめ&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#まとめ&#34;&gt;#&lt;/a&gt; まとめ&lt;/h1&gt;
&lt;p&gt;最適化をするときは、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;問題から与えられる情報と目的、決定する項目を明らかにする&lt;/li&gt;
&lt;li&gt;有名な問題 / 解きやすい問題に帰着できないか検討&lt;/li&gt;
&lt;li&gt;問題をプログラムに落とし込んでソルバーに投げる&lt;/li&gt;
&lt;li&gt;出てきた解を解釈 / 利用する&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;といった流れを組みます。&lt;br&gt;
なかなか奥が深いですね。&lt;/p&gt;
&lt;h1 id=&#34;終わりに&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#終わりに&#34;&gt;#&lt;/a&gt; 終わりに&lt;/h1&gt;
&lt;p&gt;今回は問題を VRP に帰着しましたが、オンデマンドバスのシステム構成によっては、&lt;br&gt;
VRP に帰着すると不都合な点もいくつかあります。&lt;br&gt;
そのような場合には、VRP に帰着せず、より詳細に問題を定式化する必要があります。&lt;br&gt;
そちらは、また他の記事でご紹介できればと思います。&lt;/p&gt;
</content>
        <category term="最適化" />
        <category term="VRP" />
        <updated>2020-09-22T15:43:00.000Z</updated>
    </entry>
    <entry>
        <id>https://monet-technologies-com.github.io/tech-blog/2020/08/30/%E3%83%AB%E3%83%BC%E3%83%88%E6%A4%9C%E7%B4%A2OSS%20(OSRM)%20%E3%81%AE%E4%BA%88%E6%B8%AC%E7%B2%BE%E5%BA%A6%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%BE%E3%81%97%E3%81%9F/</id>
        <title>ルート検索OSS (OSRM) の予測精度を調べました (執筆中)</title>
        <link rel="alternate" href="https://monet-technologies-com.github.io/tech-blog/2020/08/30/%E3%83%AB%E3%83%BC%E3%83%88%E6%A4%9C%E7%B4%A2OSS%20(OSRM)%20%E3%81%AE%E4%BA%88%E6%B8%AC%E7%B2%BE%E5%BA%A6%E3%82%92%E8%AA%BF%E3%81%B9%E3%81%BE%E3%81%97%E3%81%9F/"/>
        <content type="html">&lt;h1 id=&#34;執筆中の記事です-ドラフトです&#34;&gt;&lt;a href=&#34;#執筆中の記事です-ドラフトです&#34; class=&#34;headerlink&#34; title=&#34;執筆中の記事です (ドラフトです)&#34;&gt;&lt;/a&gt;執筆中の記事です (ドラフトです)&lt;/h1&gt;&lt;p&gt;システム部の登山担当太田です&lt;br&gt;山はいいぞ&lt;/p&gt;
&lt;p&gt;今回はルート検索のOSSであるOSRMを検証した話です&lt;br&gt;地図データにはOSMを用いています&lt;br&gt;導入は別で書きます&lt;/p&gt;
&lt;h1 id=&#34;前談&#34;&gt;&lt;a href=&#34;#前談&#34; class=&#34;headerlink&#34; title=&#34;前談&#34;&gt;&lt;/a&gt;前談&lt;/h1&gt;&lt;h2 id=&#34;ルート検索のコスト削減&#34;&gt;&lt;a href=&#34;#ルート検索のコスト削減&#34; class=&#34;headerlink&#34; title=&#34;ルート検索のコスト削減&#34;&gt;&lt;/a&gt;ルート検索のコスト削減&lt;/h2&gt;&lt;p&gt;MONETではオンデマンドバスサービスを提供していますが&lt;br&gt;その裏ではルート検索による時間取得のロジックが何度もはしっています&lt;br&gt;マッチングの最適化など今後進めていくにあたってもルート検索のコストは抑えたいところです&lt;br&gt;そこで信頼性をある程度担保して低コストなルート検索できないかな？&lt;br&gt;ということでOSSの有効性を検証しました&lt;/p&gt;
&lt;h2 id=&#34;OSMとは&#34;&gt;&lt;a href=&#34;#OSMとは&#34; class=&#34;headerlink&#34; title=&#34;OSMとは&#34;&gt;&lt;/a&gt;OSMとは&lt;/h2&gt;&lt;p&gt;素晴らしい取り組みとしてOpen Street Map (OSM) という地理情報をみんなで作って行こうぜ！オープンライセンスで誰にでも使えるようにしようぜ！というイカしたプロジェクトがあります&lt;br&gt;Open Street Mapでは所々足りていない情報はありますが&lt;br&gt;道路のクラス分けや店舗の情報までオープンライセンスと考えれば十分すぎるほどの地理データが利用できます&lt;br&gt;&lt;img src=&#34;2020-08-31T130832.png&#34; alt=&#34;2020-08-31T130832&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;mdui-table-fluid theme-post__card__table--flat&#34;&gt;&lt;table class=&#34;mdui-table mdui-table-hoverable &#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;OSMで利用可能な情報&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;道路分類, 建物分類, 各名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;公共交通機関, 交通量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;br&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;もちろん自分たちで編集ができ, 自宅の周りとか眺めてポチポチするだけで世界の地理データベース作成に貢献できるのでぜひやってみてください！&lt;/p&gt;
&lt;h2 id=&#34;OSRMとは&#34;&gt;&lt;a href=&#34;#OSRMとは&#34; class=&#34;headerlink&#34; title=&#34;OSRMとは&#34;&gt;&lt;/a&gt;OSRMとは&lt;/h2&gt;&lt;p&gt;ルート検索エンジンのOSSです.&lt;br&gt;中身のアルゴリズムはmulti dikstraでOSMの地図情報を基に&lt;br&gt;最短ルートを決定します. (他のアルゴリズムも使用可)&lt;br&gt;高速道路を省いたり, Uターンを禁止したりなど&lt;br&gt;痒いところの設定までできてしまう優れものです.&lt;br&gt;Mapboxでも採用されていたりします.&lt;a href=&#34;https://blog.mapbox.com/mapbox-directions-powered-by-osrm-4-8-1-cf2c45ae9aa8&#34;&gt;ブログ記事&lt;/a&gt;&lt;br&gt;ルート検索だけでなく&lt;br&gt;MapBoxでも採用されていたりします&lt;br&gt;このルート検索エンジン使ってどれくらい正しく予測できるの？&lt;br&gt;というのが今回のお題です&lt;/p&gt;
&lt;h2 id=&#34;OSRMってどんな感じで動いてますん&#34;&gt;&lt;a href=&#34;#OSRMってどんな感じで動いてますん&#34; class=&#34;headerlink&#34; title=&#34;OSRMってどんな感じで動いてますん&#34;&gt;&lt;/a&gt;OSRMってどんな感じで動いてますん&lt;/h2&gt;&lt;p&gt;実装までは&lt;a href=&#34;&#34;&gt;他記事&lt;/a&gt;でも紹介されているので省きますが&lt;br&gt;ザクっとこんな感じです&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;OSMの最新地図情報を保存&lt;/li&gt;
&lt;li&gt;luaファイル定義に従って重み付けされたグラフを作成&lt;/li&gt;
&lt;li&gt;HTTPサーバーを起動してリクエスト&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;検証&#34;&gt;&lt;a href=&#34;#検証&#34; class=&#34;headerlink&#34; title=&#34;検証&#34;&gt;&lt;/a&gt;検証&lt;/h1&gt;&lt;p&gt;最初に東京都内の限られた範囲でランダムに2点を&lt;br&gt;限られた範囲でのルート検索制度を検証しました.&lt;br&gt;検証範囲は以下になります.&lt;br&gt;&lt;img src=&#34;2020-09-01T095105.png&#34; alt=&#34;2020-09-01T095105&#34;&gt;&lt;br&gt;この中で1000回程度Google Direction API, OSRM APIどちらも叩いて統計差がどれくらいか, 変なルート通っていないか比較しました.&lt;/p&gt;
&lt;p&gt;設定はこんな感じです&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;両方とも高速道路を通らない&lt;/li&gt;
&lt;li&gt;Direction APIはtrafficMode=optimistic&lt;/li&gt;
&lt;li&gt;OSRMは交通量情報を考慮しない&lt;/li&gt;
&lt;li&gt;OSRMの設定luaファイルはデフォルト (car.lua) のまま&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;結果&#34;&gt;&lt;a href=&#34;#結果&#34; class=&#34;headerlink&#34; title=&#34;結果&#34;&gt;&lt;/a&gt;結果&lt;/h1&gt;&lt;h2 id=&#34;予測結果&#34;&gt;&lt;a href=&#34;#予測結果&#34; class=&#34;headerlink&#34; title=&#34;予測結果&#34;&gt;&lt;/a&gt;予測結果&lt;/h2&gt;&lt;p&gt;ランダムに1つ抜き出してきました.&lt;br&gt;ルートは似たようなルートを通っていますが&lt;br&gt;時間が結構ずれています.&lt;br&gt;&lt;img src=&#34;2020-09-01T095718.png&#34; alt=&#34;2020-09-01T095718&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;距離誤差＆時間誤差&#34;&gt;&lt;a href=&#34;#距離誤差＆時間誤差&#34; class=&#34;headerlink&#34; title=&#34;距離誤差＆時間誤差&#34;&gt;&lt;/a&gt;距離誤差＆時間誤差&lt;/h2&gt;&lt;p&gt;距離/時間の相対誤差のヒストグラムは以下のようになりました.&lt;br&gt;&lt;img src=&#34;2020-09-01T095458.png&#34; alt=&#34;2020-09-01T095458&#34;&gt;&lt;br&gt;ルート可視化と同様に, 距離誤差はデフォルトでもある程度正しいですが&lt;br&gt;時間誤差が大きいので修正が必要です.&lt;/p&gt;
&lt;h2 id=&#34;速い道路-遅い道路の区分け&#34;&gt;&lt;a href=&#34;#速い道路-遅い道路の区分け&#34; class=&#34;headerlink&#34; title=&#34;速い道路, 遅い道路の区分け&#34;&gt;&lt;/a&gt;速い道路, 遅い道路の区分け&lt;/h2&gt;&lt;p&gt;適当に低速, 中速, 高速で分けると&lt;br&gt;高速の比率が大きいほど予測を外していることが分かりました.&lt;br&gt;&lt;img src=&#34;2020-09-01T100026.png&#34; alt=&#34;2020-09-01T100026&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;チューニング&#34;&gt;&lt;a href=&#34;#チューニング&#34; class=&#34;headerlink&#34; title=&#34;チューニング&#34;&gt;&lt;/a&gt;チューニング&lt;/h1&gt;&lt;p&gt;上記の結果を踏まえてチューニングを行いました.&lt;br&gt;luaファイル内では道路のタグ名ごとに初期設定速度を入れています.&lt;br&gt;今回はそちらを定数倍する大雑把な修正を行いました.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2020-09-01T100311.png&#34; alt=&#34;2020-09-01T100311&#34;&gt;&lt;/p&gt;
&lt;p&gt;これで統計的な情報をある程度合わせられる！(チューニングですので)&lt;/p&gt;
&lt;h1 id=&#34;チューニング結果&#34;&gt;&lt;a href=&#34;#チューニング結果&#34; class=&#34;headerlink&#34; title=&#34;チューニング結果&#34;&gt;&lt;/a&gt;チューニング結果&lt;/h1&gt;&lt;p&gt;こんな感じになりました&lt;br&gt;散布図&lt;br&gt;&lt;img src=&#34;2020-09-01T100439.png&#34; alt=&#34;2020-09-01T100439&#34;&gt;&lt;br&gt;ヒストグラム&lt;br&gt;&lt;img src=&#34;2020-09-01T100501.png&#34; alt=&#34;2020-09-01T100501&#34;&gt;&lt;/p&gt;
&lt;p&gt;平均はあるていど合わせられましたが分散までGoogleの予測と同様とはやはり行かなかったです.&lt;br&gt;交通量の考慮も入ってくるのでそのままの代用は難しいですね.&lt;br&gt;一方, 大きく外すわけではないので裏のロジックに使用したりとか&lt;br&gt;使い道を考えれば導入できるのでは？という感触でした&lt;/p&gt;
&lt;h1 id=&#34;まとめ&#34;&gt;&lt;a href=&#34;#まとめ&#34; class=&#34;headerlink&#34; title=&#34;まとめ&#34;&gt;&lt;/a&gt;まとめ&lt;/h1&gt;&lt;p&gt;Googleと比較して検証しました&lt;br&gt;全体大きくは外さないですがダメな時もありました&lt;br&gt;どこまでの精度求めるかによりますが&lt;br&gt;存外使えるかもという事で裏側ロジックでの実装と導入&lt;br&gt;どの部分に使うかを模索することになりました.&lt;/p&gt;
</content>
        <category term="OSS" />
        <category term="OSM" />
        <category term="OSRM" />
        <updated>2020-08-30T19:06:55.000Z</updated>
    </entry>
    <entry>
        <id>https://monet-technologies-com.github.io/tech-blog/2020/08/18/Arch%20Linux%E3%81%AF%E3%81%84%E3%81%84%E3%81%9E%E3%81%A8%E3%81%84%E3%81%86%E8%A9%B1/</id>
        <title>Arch Linuxはいいぞという話</title>
        <link rel="alternate" href="https://monet-technologies-com.github.io/tech-blog/2020/08/18/Arch%20Linux%E3%81%AF%E3%81%84%E3%81%84%E3%81%9E%E3%81%A8%E3%81%84%E3%81%86%E8%A9%B1/"/>
        <content type="html">&lt;h1 id=&#34;はじめに&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#はじめに&#34;&gt;#&lt;/a&gt; はじめに&lt;/h1&gt;
&lt;p&gt;MONET Technologies 株式会社、2020 年新卒入社の竹内です。&lt;/p&gt;
&lt;p&gt;この記事では、自分のおすすめする　Linux ディストリビューションである Arch Linux についてちょろっと書かせて頂きます。&lt;/p&gt;
&lt;h2 id=&#34;arch-linuxが好きです&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#arch-linuxが好きです&#34;&gt;#&lt;/a&gt; Arch Linux が好きです。&lt;/h2&gt;
&lt;p&gt;エンジニアなら一度は辿り着く境地、 &lt;strong&gt;「オレオレカスタマイズしたマイスイート PC を作りたい」&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;自分はハードウェアがそこそこの PC に、どんなソフトを載せるか、というところが好きです&lt;br&gt;
 (自作 PC 勢のお話も是非聴いてみたいですが)。&lt;/p&gt;
&lt;p&gt;そんな自分が大学生の時からお世話になっているのが、&lt;br&gt;
&lt;a href=&#34;https://www.archlinux.jp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arch Linux&lt;/a&gt; という Linux のディストリビューションです。&lt;/p&gt;
&lt;h2 id=&#34;何がいいの&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#何がいいの&#34;&gt;#&lt;/a&gt; 何がいいの？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;めちゃくちゃ軽量 &amp;amp; 爆速 (個人の感想です)&lt;/li&gt;
&lt;li&gt;パッケージマネージャが優秀 (ほとんどのソフトを一つのパッケージマネージャで完結できて嬉しい)&lt;/li&gt;
&lt;li&gt;最初にミニマムな要素 (CLI 環境) しか入っていないので、ウィンドウマネージャなどを自分の好みで入れられる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この辺が自分のツボです。特に、高校生の頃に買った弱い PC に Arch を入れた時、あんなに Windows が重かったのが爆速で動くようになった感動を今でも忘れられません。&lt;/p&gt;
&lt;h2 id=&#34;まぁ諸説あるけど&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#まぁ諸説あるけど&#34;&gt;#&lt;/a&gt; まぁ諸説あるけど&lt;/h2&gt;
&lt;p&gt;とはいえ、確かに、 &lt;strong&gt;少しメンテナンスが面倒くさい&lt;/strong&gt; こともあるかもしれません。&lt;br&gt;
特に、Arch には始め殆どの要素は入っていない状態からスタートするので、デスクトップ環境を構築するまでが面倒だったり、カーネルのアップデートで起動しなくなったり、ということも無くはないです。&lt;/p&gt;
&lt;p&gt;が、手のかけた子ほど可愛い、そう思いませんか？(個人の意見です)&lt;/p&gt;
&lt;p&gt;何か問題が起きたとしても、&lt;a href=&#34;https://wiki.archlinux.jp/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arch Wiki&lt;/a&gt; がかなり優秀なので、大抵なんとかなります。&lt;/p&gt;
&lt;p&gt;余談ですが、Ubuntu など別の Linux ディストリビューションを使っても Arch Wiki の情報で助かったりするので、優秀なドキュメントになっているなと感じます。&lt;/p&gt;
&lt;h2 id=&#34;おすすめのウィンドウマネージャ&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#おすすめのウィンドウマネージャ&#34;&gt;#&lt;/a&gt; おすすめのウィンドウマネージャ&lt;/h2&gt;
&lt;p&gt;せっかくなので、Arch Linux 上での構成を少しだけお話します。&lt;/p&gt;
&lt;p&gt;自分はウィンドウを画面一杯、もしくは二つのウィンドウを右と左に分けて、と言った感じで敷き詰めるのが好きなので、タイル型のウィンドウマネージャが好きです。&lt;/p&gt;
&lt;p&gt;自分の PC に入れているのは、&lt;a href=&#34;https://awesomewm.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;awesome&lt;/a&gt; というウィンドウマネージャです。&lt;br&gt;
こちらを使うと、ショートカットキーで&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ウィンドウの配置&lt;/li&gt;
&lt;li&gt;フォーカスの切替&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などが簡単にできるので好みです。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2020-08-18T144707.png&#34; alt=&#34;2020-08-18T144707&#34;&gt;&lt;/p&gt;
&lt;p&gt;さらに、google-chrome の&lt;a href=&#34;https://support.google.com/chrome/answer/1649523?co=GENIE.Platform%3DDesktop&amp;amp;hl=ja&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; remote desktop&lt;/a&gt; も入るので、自宅の PC に Arch Linux を入れて、リモートデスクトップを経由して手元の PC から作業、なんてこともできます。&lt;/p&gt;
&lt;p&gt;リモートデスクトップの割に爆速で、中でどんな仕組みになっているか気になっちゃいますね。。。&lt;/p&gt;
&lt;h1 id=&#34;まとめ&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#まとめ&#34;&gt;#&lt;/a&gt; まとめ&lt;/h1&gt;
&lt;p&gt;Arch Linux はいいぞ。&lt;/p&gt;
</content>
        <category term="Arch Linux" />
        <category term="Linux" />
        <updated>2020-08-18T03:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://monet-technologies-com.github.io/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(VSCode%E3%81%AE%E8%A8%AD%E5%AE%9A%E7%B7%A8)/</id>
        <title>技術ブログ始めました(VSCodeの設定編)</title>
        <link rel="alternate" href="https://monet-technologies-com.github.io/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(VSCode%E3%81%AE%E8%A8%AD%E5%AE%9A%E7%B7%A8)/"/>
        <content type="html">&lt;h1 id=&#34;はじめに&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#はじめに&#34;&gt;#&lt;/a&gt; はじめに&lt;/h1&gt;
&lt;p&gt;MONET Technologies 株式会社、2020 年新卒入社の竹内です。&lt;/p&gt;
&lt;p&gt;この記事では、技術ブログ開始に当たって、VSCode での Hexo 記事執筆環境を導入した話です。&lt;/p&gt;
&lt;p&gt;全体構成のお話は&lt;a href=&#34;/tech-blog/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/&#34; title=&#34;技術ブログ始めました(構成編)&#34;&gt;技術ブログ始めました(構成編)&lt;/a&gt;でお話しています。&lt;/p&gt;
&lt;p&gt;静的サイトジェネレータである Hexo を導入したお話は&lt;a href=&#34;/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(Hexo-on-Docker%E7%B7%A8)/&#34; title=&#34;技術ブログ始めました(Hexo-on-Docker編)&#34;&gt;技術ブログ始めました(Hexo-on-Docker編)&lt;/a&gt;でお話しています。&lt;/p&gt;
&lt;h2 id=&#34;楽な執筆環境に向けて&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#楽な執筆環境に向けて&#34;&gt;#&lt;/a&gt; 楽な執筆環境に向けて&lt;/h2&gt;
&lt;p&gt;技術ブログ、エンジニアの方なら一度は書こうとするものだと思うのですが、3 ヶ月続けられた方には心からの拍手を送りたいです。&lt;/p&gt;
&lt;p&gt;やはり、モノを書く、アウトプットするのってコストが高いんですよね。単なるメモ程度なら雑に書いても良いわけですが、ブログとして書こうとするとある程度体裁を整えないといけなかったり。。。といったことを考えると、筆が重くなり。。。&lt;/p&gt;
&lt;p&gt;そこで今回は、執筆を楽にするためのツール、VSCode 上のエクステンションを紹介してみます。&lt;/p&gt;
&lt;h2 id=&#34;vscode-hexo-utils&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vscode-hexo-utils&#34;&gt;#&lt;/a&gt; vscode-hexo-utils&lt;/h2&gt;
&lt;p&gt;Hexo+VSCode で執筆する際には必須のエクステンションです。&lt;br&gt;
この&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=fantasy.vscode-hexo-utils&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; vscode-hexo-utils&lt;/a&gt; を使うと&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;記事一覧やタグ一覧を表示するサイドバーの追加&lt;/li&gt;
&lt;li&gt;マークダウンに画像を挿入したプレビュー時、Hexo ならではの画像ディレクトリ構成に対応してプレビューを見せてくれる&lt;/li&gt;
&lt;li&gt;Win:ctrl-alt-v Mac:opt-cmd-v でクリップボードの画像を貼り付け (記事に対応した画像配置用ディレクトリの作成とマークダウン上の参照文記述)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などなどしてくれるので大分執筆が楽になります。特に画像の挿入は重要なので、開発者には頭が上がりません。&lt;/p&gt;
&lt;h2 id=&#34;remote-development&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#remote-development&#34;&gt;#&lt;/a&gt; Remote Development&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/remote/remote-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;は Docker など、リモートとして作った環境に対して VSCode を接続できるエクステンションです。今回は Docker 上に Hexo や Git を構成しているので、直接接続して、Docker 上のコマンドを呼び出す、なんてことが簡単になります。&lt;/p&gt;
&lt;p&gt;ただ、残念なことが、 &lt;strong&gt;リモートで接続した際にクリップボードが共有化されていないらしく、上記の vscode-hexo-utils の画像コピペ機能が上手く働きません。&lt;/strong&gt;&lt;br&gt;
そのため、こちらは残念ながら、執筆中には使えない感じになっています。。。&lt;br&gt;
もしクリップボードの共有化ができると、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;vscode を直接 Docker に繋げる&lt;/li&gt;
&lt;li&gt;vscode-hexo-utils を使いながら執筆&lt;/li&gt;
&lt;li&gt;直接 Docker 内のコマンドを叩いてデプロイ&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;といった使い方ができるようになります。&lt;/p&gt;
&lt;p&gt;もちろん今の Remote Development 機能も大変良いモノで、友人なんかは、RaspberryPi などでリモート環境を作る、VSCode でリモート接続して手元の PC で IoT 開発、なんてこともしているのでおすすめです。&lt;/p&gt;
&lt;h2 id=&#34;vscodeのタスク機能&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vscodeのタスク機能&#34;&gt;#&lt;/a&gt; VSCode のタスク機能&lt;/h2&gt;
&lt;p&gt;今回は Docker を通じてのデプロイになりますが、VSCode の方でコマンドを打ってデプロイまで行いたいですよね。&lt;br&gt;
そこで使うのが、VSCode のタスク機能です。&lt;/p&gt;
&lt;p&gt;参考になるのが&lt;a href=&#34;https://fereria.github.io/reincarnation_tech/98_Other/VSCode/vscode_create_task/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;です。&lt;/p&gt;
&lt;p&gt;自分は&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-language-json&#34; mdui-tooltip=&#34;{content: &#39;language-json&#39;}&#34;&gt;&lt;code class=&#34;language-language-json&#34;&gt;{
  &#34;version&#34;: &#34;2.0.0&#34;,
  &#34;tasks&#34;: [
    {
      &#34;label&#34;: &#34;deploy-hexo-on-docker&#34;,
      &#34;type&#34;: &#34;shell&#34;,
      &#34;command&#34;: &#34;docker exec -it hexo-domain.com git add . &amp;&amp; docker exec -it hexo-domain.com git commit -m &#39;update ${fileBasenameNoExtension}&#39; &amp;&amp; docker exec -it hexo-domain.com git push&#34;
    }
  ]
}
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;というコマンドを登録して、VSCode から Docker 上の Git を叩き、push するとともにデプロイを行っています。&lt;br&gt;
このタスク機能を使えば、任意のコマンドを VSCode 上で使えるので良いですね。&lt;/p&gt;
&lt;h2 id=&#34;vscode-drawio&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vscode-drawio&#34;&gt;#&lt;/a&gt; vscode-drawio&lt;/h2&gt;
&lt;p&gt;最後に紹介するエクステンションは、&lt;br&gt;
&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;vscode-drawio&lt;/a&gt; です。&lt;/p&gt;
&lt;p&gt;こちらはブラウザ上で動く draw.io を vscode 上で動かそうというモノで、簡単な図を書きたい時に使えます。&lt;/p&gt;
&lt;p&gt;この、なんでもエディタ上にのせてやろうという心意気、自分は嫌いじゃないです。笑&lt;/p&gt;
&lt;h1 id=&#34;まとめ&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#まとめ&#34;&gt;#&lt;/a&gt; まとめ&lt;/h1&gt;
&lt;p&gt;様々な VSCode のエクステンションがあって、見ていて楽しいです。&lt;br&gt;
もちろんエンジニアは何を生み出すか、も重要ですが、たまには息抜きに自分の道具を磨いて見るのも良いですね。&lt;/p&gt;
</content>
        <category term="hexo" />
        <category term="vscode" />
        <updated>2020-07-15T23:31:46.000Z</updated>
    </entry>
    <entry>
        <id>https://monet-technologies-com.github.io/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(Hexo-on-Docker%E7%B7%A8)/</id>
        <title>技術ブログ始めました(Hexo-on-Docker編)</title>
        <link rel="alternate" href="https://monet-technologies-com.github.io/tech-blog/2020/07/15/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(Hexo-on-Docker%E7%B7%A8)/"/>
        <content type="html">&lt;h1 id=&#34;はじめに&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#はじめに&#34;&gt;#&lt;/a&gt; はじめに&lt;/h1&gt;
&lt;p&gt;MONET Technologies 株式会社、2020 年新卒入社の竹内です。&lt;/p&gt;
&lt;p&gt;この記事では、技術ブログ開始に当たって、静的サイトジェネレータ Hexo を導入した話です。&lt;/p&gt;
&lt;p&gt;全体構成のお話は&lt;a href=&#34;/tech-blog/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/&#34; title=&#34;技術ブログ始めました(構成編)&#34;&gt;技術ブログ始めました(構成編)&lt;/a&gt;でお話しています。&lt;/p&gt;
&lt;h2 id=&#34;docker使ってみます&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker使ってみます&#34;&gt;#&lt;/a&gt; Docker 使ってみます&lt;/h2&gt;
&lt;p&gt;さて、それでは本題に入っていきましょう。&lt;br&gt;
前提として、今回は Hexo 環境を Docker で構築します。&lt;br&gt;
Docker 環境自体の構築については&lt;a href=&#34;https://awesome-linus.com/2019/08/17/mac-docker-install/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;を参照しました。&lt;br&gt;
筆者は今回初めて Docker を使ってみているので、変なところがあれば指摘していただければと思います。&lt;/p&gt;
&lt;p&gt;流れとしては、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;執筆用 Docker イメージのビルド&lt;/li&gt;
&lt;li&gt;Docker コンテナの実行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;といったところです。&lt;/p&gt;
&lt;h2 id=&#34;執筆用dockerイメージのビルド&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#執筆用dockerイメージのビルド&#34;&gt;#&lt;/a&gt; 執筆用 Docker イメージのビルド&lt;/h2&gt;
&lt;p&gt;まず、執筆用の Docker イメージをビルドするところから始まります。&lt;br&gt;
Hexo 用の Docker イメージとして&lt;a href=&#34;https://github.com/spurin/docker-hexo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;こちら&lt;/a&gt;を参考にしました。&lt;/p&gt;
&lt;p&gt;Dockerfile をお好みに記述したら、記述したファイルの存在するディレクトリ上で、&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker build ./ -t docker-hexo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;とすれば Docker イメージがビルドされます。&lt;/p&gt;
&lt;p&gt;上記リンクで紹介した Docker ファイルでは&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hexo 環境の導入&lt;/li&gt;
&lt;li&gt;デプロイ用 Git の導入 (SSH キーの配置も含めて)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まで行ってくれるようになっています。&lt;/p&gt;
&lt;p&gt;今回は、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ブログのソースリポジトリを Github にプッシュ&lt;/li&gt;
&lt;li&gt;Github Pages の公開用リポジトリを更新&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;という流れを自動化したかったので、Git の hook 機能を使って Hexo のコマンドを紐づけるようにしています。&lt;/p&gt;
&lt;p&gt;具体的には、Hexo 用のデプロイコマンドを記述したファイル &lt;code&gt;pre_push&lt;/code&gt;  を作り、&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-language-sh&#34; mdui-tooltip=&#34;{content: &#39;language-sh&#39;}&#34;&gt;&lt;code class=&#34;language-language-sh&#34;&gt;#!/bin/sh

echo &#34;---hooked hexo commands start---&#34;
#hexo clean
hexo deploy --generate
echo &#34;---hooked hexo commands end---&#34;
echo &#34;---If you get a &#34;&#34;hexo command does not exist&#34;&#34; error,&#34;
echo &#34;it&#39;s seems You&#39; re not running git on Docker.---&#34;
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;~/.git/hooks/&lt;/code&gt;  以下に配置するようにしています。&lt;/p&gt;
&lt;p&gt;今回は push する前という hook になっていますが、複数人で編集することを考えると、リモートリポジトリでのマージが終わったタイミングの方が良かったかもしれないと思っています。が、今回 Github がリモートリポジトリになっているので、リモートサーバ上での hook が実装できず、ひとまず push をトリガーにしています。&lt;br&gt;
Gitlab など自前で Git サーバを立てている際には、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ブログを書く時にはまず執筆ブランチを切る&lt;/li&gt;
&lt;li&gt;ブログ執筆後、執筆ブランチ上の変更を push&lt;/li&gt;
&lt;li&gt;リモートリポジトリで執筆ブランチをマスターブランチにマージ&lt;/li&gt;
&lt;li&gt;マージ後の hook で公開用リポジトリへソースをデプロイ&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;みたいな流れが安全そうです。&lt;/p&gt;
&lt;h2 id=&#34;dockerコンテナの実行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dockerコンテナの実行&#34;&gt;#&lt;/a&gt; Docker コンテナの実行&lt;/h2&gt;
&lt;p&gt;Docker イメージをビルドしたら、&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker create --name=hexo-domain.com \
-e HEXO_SERVER_PORT=4000 \
-e GIT_USER=&amp;quot;hoge&amp;quot; \
-e GIT_EMAIL=&amp;quot;huga@sample.com&amp;quot; \
-v /Path/To/Blog/app:/app \
-p 4000:4000 \
docker-hexo

$ docker start hexo-domain.com &amp;amp;&amp;amp; docker logs --follow hexo-domain.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;でコンテナを作成し開始します。&lt;br&gt;
これを行うことで、Docker コンテナ上の Hexo サーバが動き、&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:4000&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:4000&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;を参照することでローカルなサイトのプレビューができるようになります。&lt;/p&gt;
&lt;h1 id=&#34;まとめ&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#まとめ&#34;&gt;#&lt;/a&gt; まとめ&lt;/h1&gt;
&lt;p&gt;Docker を使うことによって、複数人が使うブログの執筆環境をある程度簡易に構築することができました。&lt;br&gt;
便利なツールが増える一方、依存関係などで導入が面倒になることもよくあるので、Docker のようなツールもうまく使えるとよりハッピーになりそうですね。&lt;/p&gt;
&lt;p&gt;&lt;s&gt;時代の主流は SaaS でローカルに環境を整える場面も少なくなってきそうですが。。。&lt;/s&gt;&lt;/p&gt;
</content>
        <category term="hexo" />
        <updated>2020-07-15T17:19:39.000Z</updated>
    </entry>
    <entry>
        <id>https://monet-technologies-com.github.io/tech-blog/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/</id>
        <title>技術ブログ始めました(構成編)</title>
        <link rel="alternate" href="https://monet-technologies-com.github.io/tech-blog/2020/07/14/%E6%8A%80%E8%A1%93%E3%83%96%E3%83%AD%E3%82%B0%E5%A7%8B%E3%82%81%E3%81%BE%E3%81%97%E3%81%9F(%E6%A7%8B%E6%88%90%E7%B7%A8)/"/>
        <content type="html">&lt;h1 id=&#34;はじめに&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#はじめに&#34;&gt;#&lt;/a&gt; はじめに&lt;/h1&gt;
&lt;p&gt;MONET Technologies 株式会社、2020 年新卒入社の竹内です。&lt;/p&gt;
&lt;p&gt;この度、弊社でも社員の技術力向上 &amp;amp; アウトプットのために、技術ブログを開設する運びとなりました。&lt;/p&gt;
&lt;p&gt;記念すべき 1 回目の記事は、この技術ブログの立ち上げについて一通り書きます。&lt;/p&gt;
&lt;h2 id=&#34;技術ブログの選定&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#技術ブログの選定&#34;&gt;#&lt;/a&gt; 技術ブログの選定&lt;/h2&gt;
&lt;p&gt;技術ブログを作成するに当たって考えたのは、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;サーバの維持コスト&lt;/li&gt;
&lt;li&gt;記事の管理コスト&lt;/li&gt;
&lt;li&gt;執筆環境&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;の 3 点です。技術ブログを公開するというということは当然 Web サーバが必要になるわけですが、そこにコストやメンテナンスが必要になると継続するのが面倒です。なので、何か外部のサービスを使って公開したいという要求があります。&lt;br&gt;
また、ページを編集したら、編集履歴や差分まで管理したいです。&lt;br&gt;
更に、執筆環境としては、普段コードを書いたりするエディタを使ってそのまま書きたいですよね。&lt;/p&gt;
&lt;p&gt;ということで、今回は静的サイトジェネレータ&lt;a href=&#34;https://hexo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; Hexo&lt;/a&gt; と&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; Github Pages&lt;/a&gt; を使って技術ブログを作ってみることにしました。ただ、今回用いる Hexo は Node.js で作られており、バージョン管理などが面倒です。そこで、今回は、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成環境：Docker 上の Hexo&lt;/li&gt;
&lt;li&gt;執筆環境：Visual Studio Code などの各自のエディタ&lt;/li&gt;
&lt;li&gt;公開環境：Github Pages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という構成で全体を組みました (もちろん執筆環境はお好きなエディタを使ってください)。&lt;/p&gt;
&lt;p&gt;全体構成のイメージはこんな感じです。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2020-08-06T103219.png&#34; alt=&#34;2020-08-06T103219&#34;&gt;&lt;/p&gt;
&lt;p&gt;次回からそれぞれの環境について執筆していきます。&lt;/p&gt;
&lt;h1 id=&#34;まとめ&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#まとめ&#34;&gt;#&lt;/a&gt; まとめ&lt;/h1&gt;
&lt;p&gt;技術ブログを始めるので皆様ゆるゆるとお付き合いください！&lt;/p&gt;
</content>
        <category term="hexo" />
        <category term="vscode" />
        <category term="github" />
        <category term="docker" />
        <updated>2020-07-14T05:09:45.000Z</updated>
    </entry>
</feed>
